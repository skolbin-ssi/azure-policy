apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sazurev1blockresource
spec:
  crd:
    spec:
      names:
        kind: K8sAzureV1BlockResource
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sazurev1blockresource

        violation[{"msg": msg}] {
          obj := input.review.object
          not is_allowed(obj)
          namespace := fetch_namespace(obj)
          msg := sprintf("%v resource except default in namespace %v is not allowed, name: %v", [obj.kind, namespace, obj.metadata.name])
        }

        is_allowed(obj) {
          obj.kind == "ServiceAccount"
          obj.metadata.name == "default"
        }

        is_allowed(obj) {
          obj.kind == "Secret"
          obj.type == "kubernetes.io/service-account-token"
          obj.metadata.annotations["kubernetes.io/service-account.name"] == "default"
        }

        is_allowed(obj) {
          obj.kind == "Service"
          obj.metadata.name == "kubernetes"
        }

        is_allowed(obj) {
          obj.kind == "ConfigMap"
          obj.metadata.name == "kube-root-ca.crt"
        }

        fetch_namespace(obj) = out {
          out := obj.metadata.namespace
        }

apiVersion: v1
kind: ServiceAccount
metadata:
  name: azure-policy-webhook-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: azure-policy-webhook-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  resourceNames:
  - azure-policy-webhook-cert
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: azure-policy-webhook-cluster-role
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - azure-policy-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: azure-policy-webhook-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: azure-policy-webhook-role
subjects:
- kind: ServiceAccount
  name: azure-policy-webhook-account
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: azure-policy-webhook-cluster-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azure-policy-webhook-cluster-role
subjects:
- kind: ServiceAccount
  name: azure-policy-webhook-account
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    name: azure-policy-webhook-cert
  name: azure-policy-webhook-cert
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: azure-policy-webhook-service
  namespace: kube-system
  labels:
    name: azure-policy-webhook-service
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 9449
  selector:
    app: azure-policy-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: azure-policy-webhook
  name: azure-policy-webhook
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-policy-webhook
  template:
    metadata:
      labels:
        app: azure-policy-webhook
      name: azure-policy-webhook
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: azure-policy-webhook-account
      containers:
        - name: azure-policy-webhook
          image: {{ .Values.azurepolicywebhook.image.name }}:{{ .Values.azurepolicywebhook.image.tag }}
          imagePullPolicy: Always
          args:
            - --port=9449
            - --generate-certs=true
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            requests:
              cpu: 30m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 200Mi
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9090
          readinessProbe:
            httpGet:
              path: /readyz
              port: 9090
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: azure-policy-validating-webhook-configuration
webhooks:
  - name: byovalidation.policy.azure.com
    clientConfig:
      service:
        name: azure-policy-webhook-service
        namespace: kube-system
        path: /validategatekeeperresources
    rules:
      - apiGroups:
          - templates.gatekeeper.sh
          - constraints.gatekeeper.sh
        apiVersions:
          - v1beta1
        operations:
          - CREATE
          - UPDATE
        resources:
          - '*'
      - apiGroups:
          - config.gatekeeper.sh
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - '*'
    sideEffects: None
    failurePolicy: Ignore
    timeoutSeconds: 5

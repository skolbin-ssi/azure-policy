{
  "properties": {
    "displayName": "[Preview]: [Preview]: Managed Identity Federated Credentials should be of approved types from approved federation sources",
    "policyType": "BuiltIn",
    "description": "Control use of federated credentials for Managed Identities. This initiative incudes policies to block federated identity credentials altogether, to limit use to specific federation provider types, and to limit federation reationships to approved sources.",
    "metadata": {
      "version": "1.0.0-preview",
      "category": "Managed Identity",
      "preview": true
    },
    "version": "1.0.0-preview",
    "parameters": {
      "allowFederatedCredentials": {
        "type": "boolean",
        "metadata": {
          "displayName": "Allow Federated Credentials",
          "description": "Set this value to true to allow Federated Credentials to be configured on Azure Managed Identities.",
          "portalReview": true
        },
        "defaultValue": false
      },
      "allowAKS": {
        "type": "boolean",
        "metadata": {
          "displayName": "Allow AKS",
          "description": "Set this value to true to allow Azure Managed Identities federation with Azure Kubernetes Service Clusters.",
          "portalReview": true
        },
        "defaultValue": false
      },
      "allowGitHub": {
        "type": "boolean",
        "metadata": {
          "displayName": "Allow GitHub",
          "description": "Set this value to true to allow Azure Managed Identities federation with GitHub Actions.",
          "portalReview": true
        },
        "defaultValue": false
      },
      "allowAWS": {
        "type": "boolean",
        "metadata": {
          "displayName": "Allow AWS",
          "description": "Set this value to true to allow Azure Managed Identities federation with Amazon Web Services resources.",
          "portalReview": true
        },
        "defaultValue": false
      },
      "allowGCS": {
        "type": "boolean",
        "metadata": {
          "displayName": "Allow GCS",
          "description": "Set this value to true to allow Azure Managed Identities federation with Google Cloud resources.",
          "portalReview": true
        },
        "defaultValue": false
      },
      "allowedIssuerExceptions": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed Issuer Exceptions",
          "description": "The list of specific issuers allowed.",
          "portalReview": true
        },
        "defaultValue": []
      },
      "allowedAKSTenants": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed AKS cluster tenants",
          "description": "The list of allowed Azure AD tenant ID's of AKS OIDC issuers. Empty to allow all tenants.",
          "portalReview": true
        },
        "defaultValue": []
      },
      "allowedAKSLocations": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed AKS cluster locations",
          "description": "The list of allowed locations for AKS OIDC issuers. Empty to allow any location.",
          "strongType": "location",
          "portalReview": true
        },
        "defaultValue": []
      },
      "allowedAKSClusterExceptions": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed AKS Cluster Exceptions",
          "description": "The list of specific cluster ids that will be exceptions to the location and tenant rules.",
          "portalReview": true
        },
        "defaultValue": []
      },
      "allowedGitHubRepoOwners": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed GitHub Repo Owners",
          "description": "The list of allowed owners. Empty to allow all owners.",
          "portalReview": true
        },
        "defaultValue": []
      },
      "allowedGitHubRepoExceptions": {
        "type": "array",
        "metadata": {
          "displayName": "Allowed GitHub Repo Exceptions",
          "description": "The list of specific repo names (including owner) that are exempt from the above repo ownership rules.",
          "portalReview": true
        },
        "defaultValue": []
      },
      "effect": {
        "type": "string",
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy.",
          "portalReview": true
        },
        "allowedValues": [
          "Audit",
          "Disabled",
          "Deny"
        ],
        "defaultValue": "Audit"
      }
    },
    "policyDefinitions": [
      {
        "policyDefinitionReferenceId": "2571b7c3-3056-4a61-b00a-9bc5232234f5",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2571b7c3-3056-4a61-b00a-9bc5232234f5",
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "allowFederatedCredentials": {
            "value": "[parameters('allowFederatedCredentials')]"
          },
          "allowAKS": {
            "value": "[parameters('allowAKS')]"
          },
          "allowGitHub": {
            "value": "[parameters('allowGitHub')]"
          },
          "allowAWS": {
            "value": "[parameters('allowAWS')]"
          },
          "allowGCS": {
            "value": "[parameters('allowGCS')]"
          },
          "allowedIssuerExceptions": {
            "value": "[parameters('allowedIssuerExceptions')]"
          },
          "effect": {
            "value": "[parameters('effect')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "ae62c456-33de-4dc8-b100-7ce9028a7d99",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/ae62c456-33de-4dc8-b100-7ce9028a7d99",
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "allowedTenants": {
            "value": "[parameters('allowedAKSTenants')]"
          },
          "allowedLocations": {
            "value": "[parameters('allowedAKSLocations')]"
          },
          "allowedClusterExceptions": {
            "value": "[parameters('allowedAKSClusterExceptions')]"
          },
          "effect": {
            "value": "[parameters('effect')]"
          }
        }
      },
      {
        "policyDefinitionReferenceId": "fd1a8e20-2c4f-4a6c-9354-b58d786d9a1f",
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/fd1a8e20-2c4f-4a6c-9354-b58d786d9a1f",
        "definitionVersion": "1.*.*-preview",
        "parameters": {
          "allowedRepoOwners": {
            "value": "[parameters('allowedGitHubRepoOwners')]"
          },
          "allowedRepoExceptions": {
            "value": "[parameters('allowedGitHubRepoExceptions')]"
          },
          "effect": {
            "value": "[parameters('effect')]"
          }
        }
      }
    ],
    "versions": [
      "1.0.0-PREVIEW"
    ]
  },
  "id": "/providers/Microsoft.Authorization/policySetDefinitions/5e4ee281-95a3-442a-bb2a-5ef68cf5181a",
  "name": "5e4ee281-95a3-442a-bb2a-5ef68cf5181a"
}
{
  "properties": {
    "displayName": "[Preview]: Configure an approval endpoint called prior to jobs running for specified Azure Machine Learning computes",
    "policyType": "BuiltIn",
    "mode": "Microsoft.MachineLearningServices.Data",
    "description": "Configure an approval endpoint called prior to jobs running for specified Azure Machine Learning computes and can be assigned at the workspace. For more information. For more information, visit https://aka.ms/amlpolicydoc.",
    "metadata": {
      "version": "5.1.0-preview",
      "category": "Machine Learning",
      "preview": true
    },
    "version": "5.1.0-preview",
    "parameters": {
      "computeNames": {
        "type": "Array",
        "metadata": {
          "displayName": "Compute names where Azure ML jobs run",
          "description": "List of compute names where this policy should be applied. Ex. cpu-cluster;gpu-cluster. If no value is provided to this parameter then policy is applicable to all computes."
        },
        "defaultValue": []
      },
      "computeType": {
        "type": "String",
        "metadata": {
          "displayName": "Compute type for the compute where Azure ML jobs run",
          "description": "Compute type name. If Any is selected, the policy is applicable to any compute types."
        },
        "allowedValues": [
          "MachineLearningCompute",
          "AzureDataFactory",
          "HDInsight",
          "SynapseSpark",
          "Any"
        ],
        "defaultValue": "Any"
      },
      "isIsolatedNetwork": {
        "type": "String",
        "metadata": {
          "displayName": "Is the compute in isolated network",
          "description": "Only applicable for MachineLearningCompute type. \"Yes: apply the policy to computes in isolated network\". \"No: apply the policy to computes that are out of isolated network\". \"Any: apply the policy regardless of if the compute is in isolated network or not\". If compute type is not MachineLearningCompute, the value set for this parameter will be ignored."
        },
        "allowedValues": [
          "Yes",
          "No",
          "Any"
        ],
        "defaultValue": "Any"
      },
      "approvalEndpoint": {
        "type": "String",
        "metadata": {
          "displayName": "Approval endpoint",
          "description": "Approval endpoint that needs to be called before an Azure ML job is run. Ex. http://amlrunapproval/approve"
        }
      },
      "tags": {
        "type": "Array",
        "metadata": {
          "displayName": "Tags applied to compute",
          "description": "Assign a list of tags to match with the tags provided with the compute in the job. The policy is applied only if all tags match {e.g. [ \"tagKey:tagValue\", ... ]"
        },
        "defaultValue": []
      },
      "effect": {
        "type": "String",
        "defaultValue": "enforceSetting",
        "allowedValues": [
          "enforceSetting",
          "disabled"
        ],
        "metadata": {
          "displayName": "Effect",
          "description": "Enable or disable the execution of the policy."
        }
      }
    },
    "policyRule": {
      "if": {
        "allOf": [
          {
            "anyOf": [
              {
                "field": "Microsoft.MachineLearningServices.Data/workspaces/computeName",
                "in": "[parameters('computeNames')]"
              },
              {
                "value": "[length(parameters('computeNames'))]",
                "equals": 0
              }
            ]
          },
          {
            "anyOf": [
              {
                "value": "[parameters('computeType')]",
                "equals": "Any"
              },
              {
                "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType",
                "equals": "[parameters('computeType')]"
              }
            ]
          },
          {
            "anyOf": [
              {
                "allOf": [
                  {
                    "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType",
                    "equals": "MachineLearningCompute"
                  },
                  {
                    "anyOf": [
                      {
                        "value": "[parameters('isIsolatedNetwork')]",
                        "equals": "Any"
                      },
                      {
                        "field": "Microsoft.MachineLearningServices.Data/workspaces/isIsolatedNetwork",
                        "equals": "[parameters('isIsolatedNetwork')]"
                      }
                    ]
                  }
                ]
              },
              {
                "field": "Microsoft.MachineLearningServices.Data/workspaces/computeType",
                "notEquals": "MachineLearningCompute"
              }
            ]
          },
          {
            "allOf": [
              {
                "anyOf": [
                  {
                    "value": "[length(parameters('tags'))]",
                    "notEquals": 0
                  },
                  {
                    "value": "[length(field('Microsoft.MachineLearningServices.Data/workspaces/tags[*]'))]",
                    "equals": 0
                  }
                ]
              },
              {
                "count": {
                  "field": "Microsoft.MachineLearningServices.Data/workspaces/tags[*]",
                  "where": {
                    "field": "Microsoft.MachineLearningServices.Data/workspaces/tags[*]",
                    "in": "[parameters('tags')]"
                  }
                },
                "equals": "[length(parameters('tags'))]"
              }
            ]
          }
        ]
      },
      "then": {
        "effect": "[parameters('effect')]",
        "details": {
          "setting": {
            "name": "approvalEndpoint",
            "value": "[parameters('approvalEndpoint')]"
          }
        }
      }
    }
  },
  "id": "/providers/Microsoft.Authorization/policyDefinitions/3948394e-63de-11ea-bc55-0242ac130003",
  "name": "3948394e-63de-11ea-bc55-0242ac130003"
}